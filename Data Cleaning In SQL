Select *
From [Portfolio Project].[dbo].[nashville_housing]

--------------------------------------------------------------------------------------------------------------------------

--Standarize Date Format


Select SaleDateConverted, CONVERT(Date,SaleDate)
From [Portfolio Project].[dbo].[nashville_housing]



UPDATE nashville_housing
SET SaleDate = CONVERT(Date,SaleDate)

--OR

Alter Table nashville_housing
Add SaleDateConverted Date;

UPDATE nashville_housing
SET SaleDateConverted = CONVERT(Date,SaleDate)



--------------------------------------------------------------------------------------------------------------------------

-- Populate Property Address data


Select *
From [Portfolio Project].[dbo].[nashville_housing]
--Where PropertyAddress is null
order by ParcelID


Select a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
From [Portfolio Project].[dbo].[nashville_housing] a
JOIN [Portfolio Project].[dbo].[nashville_housing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null


Update a
SET PropertyAddress = ISNULL(a.PropertyAddress,b.PropertyAddress)
From [Portfolio Project].[dbo].[nashville_housing] a
JOIN [Portfolio Project].[dbo].[nashville_housing] b
	on a.ParcelID = b.ParcelID
	AND a.[UniqueID ] <> b.[UniqueID ]
Where a.PropertyAddress is null




--------------------------------------------------------------------------------------------------------------------------


-- Breaking out Address into Individual Columns (Address, City, State)


Select PropertyAddress
From [Portfolio Project].[dbo].[nashville_housing]
--Where PropertyAddress is null
--order by ParcelID

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address

From [Portfolio Project].[dbo].[nashville_housing]



ALTER TABLE nashville_housing
Add PropertySplitAddress Nvarchar(255);

Update nashville_housing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )



ALTER TABLE nashville_housing
Add PropertySplitCity Nvarchar(255);

Update nashville_housing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))



Select *
From [Portfolio Project].[dbo].[nashville_housing]

Select OwnerAddress
From [Portfolio Project].[dbo].[nashville_housing]

Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From [Portfolio Project].[dbo].[nashville_housing]




ALTER TABLE nashville_housing
Add OwnerSplitAddress Nvarchar(255);

Update  nashville_housing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)



ALTER TABLE  nashville_housing
Add OwnerSplitCity Nvarchar(255);

Update  nashville_housing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE  nashville_housing
Add OwnerSplitState Nvarchar(255);

Update nashville_housing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)



Select *
From [Portfolio Project].[dbo].[nashville_housing]



--------------------------------------------------------------------------------------------------------------------------


-- Change Y and N to Yes and No in "Sold as Vacant" field



Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From [Portfolio Project].[dbo].[nashville_housing]
Group by SoldAsVacant
order by 2



Select SoldAsVacant
, CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From [Portfolio Project].[dbo].[nashville_housing]


Update nashville_housing
SET SoldAsVacant = CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END



--------------------------------------------------------------------------------------------------------------------------


	   -- Remove Duplicates

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From [Portfolio Project].[dbo].[nashville_housing]
--order by ParcelID
)
Select *
From RowNumCTE
Where row_num > 1
Order by PropertyAddress



Select *
From [Portfolio Project].[dbo].[nashville_housing]



--------------------------------------------------------------------------------------------------------------------------


-- Delete Unused Columns



Select *
From [Portfolio Project].[dbo].[nashville_housing]


ALTER TABLE [Portfolio Project].[dbo].[nashville_housing]
DROP COLUMN OwnerAddress, TaxDistrict, PropertyAddress, SaleDate
